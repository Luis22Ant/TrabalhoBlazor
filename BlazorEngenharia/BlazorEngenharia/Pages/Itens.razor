@page "/itens"
@using System.Text.Json
@using BlazorEngenharia.Service
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager NavigationManager
@inject HttpClient Http;
@inject UsuarioState UsuarioState

@if (UsuarioState.IsLoggedIn)
{


    <h1>Tela de itens</h1>
    @if (UsuarioState.Usuario.TipoAcesso == 0)
    {
        <button id="BtnAddUser" class="btn btn-success" @onclick="@AddItem">Adicionar item</button>
    }


    <style>
        #GdvDoador th {
            border: 1px solid black;
            padding: 5px;
        }

        #GdvDoador td {
            border: 1px solid black;
            padding: 5px;
        }

        #GdvDoador {
            margin-top: 2rem;
        }

        #BtnAddUser {
            margin-bottom: 2rem;
        }
    </style>

    @if (Loading)
    {
        <p>Carregando...</p>
    }
    else if (ItensList != null)
    {
        <table id="GdvDoador">
            <thead>
                <tr>
                    @if (UsuarioState.Usuario.TipoAcesso == 0)
                    {
                        <th></th>
                        <th></th>
                        <th></th>
                    }
                    <th>Id</th>
                    <th>Descricao</th>
                    <th>Marca</th>
                    <th>Cor</th>
                    <th>Ativo</th>
                    <th>Grupo</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in ItensList)
                {
                    <tr>
                        @if (UsuarioState.Usuario.TipoAcesso == 0)
                        {
                            <td><a style="cursor: pointer;" @onclick="() => ViewItem(item.Id)"><i class="fas fa-eye"></i></a></td>
                            <td><a style="cursor: pointer;" @onclick="() => UpdateItem(item.Id)"><i class="fas fa-pen"></i></a></td>
                            <td><a style="cursor: pointer;" @onclick="() => DeleteItem(item.Id)"><i class="fa-solid fa-trash"></i></a></td>
                        }
                        <td>@item.Id</td>
                        <td>@item.Descricao</td>
                        <td>@item.Marca</td>
                        <td>@item.Cor</td>
                        <td>@item.Ativo</td>
                        <td>@item.GrupoId</td>

                    </tr>
                }
            </tbody>
        </table>


    }

}

@code {
    List<Item> ItensList = new List<Item>();
    bool Loading = true;


    protected override async Task OnInitializedAsync()
    {
        await getItens();
    }

    public void ViewItem(int id)
    {

    }
    public void UpdateItem(int id)
    {

    }

    async Task DeleteItem(int id)
    {
        var response = await Http.DeleteAsync($"https://localhost:7165/api/Item/{id}");

        if (response.IsSuccessStatusCode)
        {

            if (response.IsSuccessStatusCode)
            {
                Console.WriteLine("Deu bom");
                await getItens();
            }
            else
            {
                Console.WriteLine("Deu ruim");
            }

        }
        else
        {
            Console.WriteLine($"Falha na requisição DELETE. Status code: {response.StatusCode}");
        }
    }

    async Task getItens()
    {
        try
        {
            var response = await Http.GetFromJsonAsync<List<Item>>("https://localhost:7165/api/Item");

            if (response != null)
            {
                ItensList = response;
            }
        }
        catch (Exception ex)
        {
            ex.ToString();
        }

        finally
        {
            Loading = false;
        }
    }

    public void AddItem()
    {
        NavigationManager.NavigateTo("/adicionarItem");
    }

    public class Item
    {
        public int Id { get; set; }
        public string Descricao { get; set; } = string.Empty;
        public string Marca { get; set; } = string.Empty;
        public string Cor { get; set; } = string.Empty;
        public string Ativo { get; set; } = string.Empty;


        public int GrupoId { get; set; }
    }


}
